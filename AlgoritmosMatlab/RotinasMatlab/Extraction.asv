function [data] = Extraction(tankDir,block)


%% This algorithm extract data from tanks

%Parameters

% if nargin < 2 
%     error('Not enough input parameters')
% end

TTX = actxcontrol('TTank.X');
TTX.ConnectServer('Local','Me');
TTX.OpenTank(tankDir,'R');
TTX.SelectBlock(block);
TTX.CreateEpocIndexing; % Allow to extract data by epocs

% Parameters for data extraction
time_before = 5;        % time (in seconds) before the sound onset for analysis
time_after  = 5;        % time (in seconds) after the sound onset for analysis

% Codes for TDT data extraction
ts_code = 6;            % code to extract time stamps (ts) in ParseEvInfoV

%Extração    (Ordem em que as variáveis são chamadas interefere em como são
%montadas!
epoc = TTX.GetEpocsExV('CSap',5);
Waves=zeros(15259,32,30);

TTX.SetUseSortName('SortOFF'); % declare which sort you are using!

for ch = 1:32
    TTX.SetGlobalV('Channel', ch);
    
    
    for sc = 1:3
        TTX.SetGlobalV('SortCode', sc);
        
        for trial= 1:length(epoc)
            
            TTX.SetGlobalV('T1',epoc(2,trial) -  time_before);
            TTX.SetGlobalV('T2',epoc(3,trial) +  time_after );
            N = TTX.ReadEventsSimple('eNeu');
            data(ch,sc,trial).timeStamps = TTX.ParseEvInfoV(0,N,ts_code);
            data(ch,sc,trial).spikes = TTX.ParseEvV(0, N);
            
            
        end
        
    end
    
    TTX.SetGlobalV('SortCode',0); %Problems calling Waves varying sortcode
    for trial= 1:length(epoc)
        
        TTX.SetGlobalV('T1',epoc(2,trial) - time_before);
        TTX.SetGlobalV('T2',epoc(3,trial) + time_after );
        Waves(:,ch,trial) = TTX.ReadWavesV('Waves');
        
        
    end
end

data(1,1,1).Wave = Waves;
data(1,1,1).epoc = epoc;
data(1,1,1).tankName = tankDir;
data(1,1,1).blockName = block;
data(1,1,1).time_windows = [time_before time_after];


TTX.CloseTank

TTX.ReleaseServer

end

